Optimization
	How to Measure Performance
		eg. CPU time
		    Stopwatch
		    clock_gettime( /*Type of Clock*/ , /*Pointer to a time structure*/);

	Profiling (cheaply)
		Statistical Profiling
			Run the program as normal, but a clock forces the CPU to stop at a set time interval. Then it updates a table and uses the %rip to index and increment a count.
			You essentially have a histogram for your instructions. It is an approximation for instruction frequency.

			gcc -pg foo.c
			gprof aout gmon.out
		Alternatives to Simple Statistical Profiling
			- Cache miss counts (hardware support)
			- call-graph records
			- Basic Block
				gcc -fprofile -ares -ftest_coverage

	Andall's Law
		S = speedup, S = T_old / T_new

		S = 1/[(1-x) + (x/y)]	where x = fraction of time spent in the kernel, y = speedup of kernel

	Performance (CPU time)
		Integer vs. Floating Point