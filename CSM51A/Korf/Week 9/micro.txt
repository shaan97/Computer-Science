
   M51A     Logic Design of Digital Systems     Richard Korf     Fall 2016

           Assignment 9 - Due Wednesday, November 30, 2:00 p.m.

    DO NOT CONSULT ANY OUTSIDE REFERENCES OR WEBSITES FOR THIS PROBLEM
    
 This assignment asks you to write symbolic microcode instructions for some
 additional addressing modes.  Assume our one-accumulator machine is augmented
 with another register called the index register (IDX).  For each of the
 addressing modes described below, write the symbolic microcode instructions
 necessary to implement a LOAD instruction using that addressing mode.  The
 different addressing modes would be represented by additional bits in the
 machine language instruction.  Note that your microcode must not change the
 values in the instruction register, the index register, nor the accumulator,
 except for the actual load itself.  In other words, do not use the accumulator
 for intermediate calculations.  You need only show one copy of the fetch
 microcode.

 1. Straight memory reference: LOAD A causes the contents of memory location A
 to be loaded into the accumulator.

 2. Register reference: LOAD INDEX causes the contents of the index register to
 be loaded into the accumulator.  This is used to manipulate the index for array
 references.

 3. Immediate reference: LOAD 10, for example, causes the value 10 to be loaded
 into the accumulator.  The constant value appears as the address bits of the
 load instruction.  This is used to load small constants directly without having
 to store them in memory.

 4. Indexed reference: LOAD INDEXED causes the contents of the memory location
 whose address is in the index register to be loaded into the accumulator.  This
 is used to refer to an array element.

 5. Offset indexed reference: LOAD INDEXED OFFSET causes the contents of the
 memory location whose address is the sum of the contents of the index register
 and the offset value to be loaded into the accumulator.  The offset value
 appears as the address bits of the load instruction.  This is also used for
 array references.

 6. Indirect memory reference: LOAD INDIRECT A causes the contents of the memory
 location whose address is stored in memory at location A to be loaded into the
 accumulator.  This is used to implement pointer references.

 7. Indexed indirect memory reference: LOAD INDIRECT INDEXED A causes the
 contents of the memory location whose address is the sum of the contents of
 memory location A and the contents of the index register to be loaded into the
 accumulator.  This is used to access array elements based on pointers.










