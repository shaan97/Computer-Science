   M51A     Logic Design of Digital Systems     Richard Korf     Fall 2016

	     Assignment 4 - Due Wednesday, October 26, 2 p.m.

    DO NOT CONSULT ANY OUTSIDE REFERENCES OR WEBSITES FOR THIS PROBLEM SET
    
 Problem 1.  Design a ripple-borrow subtracter circuit using only NOR gates.
 You may assume that both operands are positive and represented in standard
 binary.  You should design a half-subtracter, full-subtracter, and show how
 they are connected together to produce a four-bit subtracter circuit.  Be sure
 to indicate the meaning of all external wire connections.  Turn in the truth
 tables, Karnaugh maps, logic expressions, and circuit diagrams for each of your
 individual circuits, plus a block diagram for the complete circuit.  Be sure to
 minimize the number of gates.

 Problem 2.  Design a comparator circuit for binary numbers using only NAND
 gates.  It should take as input two numbers represented in standard binary, X
 and Y, and produce two outputs, G and L, which indicate that X is Greater than
 or Less than Y, respectively.  If both outputs are zero, it indicates that the
 values are equal.  Design a half-comparator, full-comparator, and a full
 four-bit comparator.  With nothing more than multiple copies of your circuit,
 you should be able compare numbers with an arbitrary number of bits.  Turn in
 the truth tables, Karnaugh maps, logic expressions, and circuit diagrams for
 each of your individual circuits, plus a block diagram for the complete
 circuit.  Be sure to minimize the number of gates.

 Problem 3.  Design a circuit that sorts two nonnegative integers X and Y, each
 of which is represented by four bits.  The output of your circuit will be both
 numbers, but in sorted order.  Use only your comparator module designed above
 and 2 to 1 multiplexers as building blocks.  Minimize the number of
 multiplexers used.

 Problem 4.  Using only your circuit designed in Problem 3 as a module, design a
 circuit that sorts four four-bit integers.  Minimize the delay of the network
 and the number of copies of your circuit needed.
 



