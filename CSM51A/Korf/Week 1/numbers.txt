   M51A     Logic Design of Digital Systems     Richard Korf     Fall 2016

       Assignment 1 - Due in Lecture, Wednesday, October 5, 2:00 p.m.

 Questions 1-5 concern integers encoded in 32-bit two's complement
 representation.  Check your answers to 4 and 5 on your computer, making sure
 you are using a 32-bit data type, such as an "int" in C.

 1. How many different integers can be represented?

 2. What is the largest one? (give both explicit binary and explicit decimal
 representations)

 3. What is the smallest one? (negative number with the largest magnitude, in
 both explicit binary and explicit decimal representations)

 4. Convert one billion and two billion to 32-bit binary, add them together, and
 convert the answer to decimal.  Note that all bit patterns are interpreted in
 32-bit two's complement representation.  What happened?  What is the arithmetic
 relationship between the answer you get and three billion?  Show your work.

 5. Convert minus one billion and minus two billion to 32-bit two's complement
 binary, add them together in 32-bit binary, and convert the answer to decimal.
 What happened?  What is the arithmetic relationship between the answer you get
 and minus three billion?  Show your work.

 Questions 6-18 concern the following 16-bit floating point representation: The
 first bit is the sign of the number (0=+, 1=-), the next nine bits are the
 mantissa, the next bit is the sign of the exponent, and the last five bits are
 the magnitude of the exponent.  All numbers are normalized, i.e. the first bit
 of the mantissa is one, except for zero which is all zeros.

 6. How many significant binary digits do numbers in this representation have?
    How many significant decimal digits does that correspond to?

 7. How many different numbers can be represented? 

 8. What is the largest number? (in both 16-bit binary floating point and
    explicit decimal representations)

 9. What is the smallest number? (in both 16-bit binary floating point and
    explicit decimal representations)

 10. What non-zero number is closest to zero? (in both binary and decimal)

 11. What's the smallest difference between two consecutive numbers? (Give both
 numbers in both binary and decimal representations)

 12. What's the largest difference between two consecutive numbers? (Give both
 numbers in both binary and decimal representations)

 13. Translate .1 decimal into our 16-bit binary floating point representation
 and translate the result back into decimal.  What happened?  Why?

 14. Give a simple rule for determining when a fraction can be represented
 exactly by a terminating decimal expression (i.e. non-repeating).

 15. Give a simple rule for determining when a fraction can be represented
 exactly by a terminating binary expression (i.e. non-repeating).

 16. Do all termating binary fractions terminate in decimal?  Do all terminating
 decimal fractions terminate in binary?

 17. Translate .129 and .121 into our 16-bit floating-point representation,
 subtract the second from the first, normalize the result, and translate it back
 into decimal.  Translate .008 into our representation and back into decimal.
 Compare the two results and describe what happened.

 18. We want to add together the three numbers 1.0, .002, and .002. Translate all
 three into our 16-bit representation, and then add them in two different orders.
 In the first case, add the first two and then the third to the result, and in
 the second case add the last two and then the first to the result.  Translate
 both answers back into decimal and describe what happened.  In general, given a
 number of terms to sum, in what order should they be added and why?


